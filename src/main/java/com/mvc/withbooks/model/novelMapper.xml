<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.mvc.withbooks.model.novelMapper"> 
	<select id="writerListNovel" resultType="NovelDTO">
		select * from novel
	</select>
	
	<select id="listmemberNovel" resultType="NovelDTO">
		select Nnum, Novel_subject, Novel_memberName, Novel_image, Novel_cate, Novel_summary from novel, member where novel.Mnum = member.Mnum and member.Mnum = #{Mnum}
	</select>
	
	<insert id="insertNovel" parameterType="NovelDTO">
		insert into novel(Nnum, Novel_subject, Novel_memberName, Novel_image, Novel_cate, Novel_summary, Mnum) values(seq_novel.nextval, #{Novel_subject}, #{Novel_memberName}, #{Novel_image}, #{Novel_cate}, #{Novel_summary}, #{memberDTO.mnum})
	</insert>

	<delete id="deleteNovel" parameterType="int">
		delete from novel where Nnum = #{nnum}
	</delete>
	
	<update id="updateNovel" parameterType="NovelDTO">
		update novel set Novel_subject=#{Novel_subject}, Novel_memberName=#{Novel_memberName}, Novel_image=#{Novel_image}, Novel_summary=#{Novel_summary} where nnum = #{nnum} 
	</update>
	
	<select id="getNovel" parameterType="int" resultType="NovelDTO" resultMap="getnovelDTO">
		select * from novel where Nnum = #{nnum}
	</select>
	
	<select id="getNovelAre" parameterType="int" resultType="novelDTO" resultMap="getnovelDTO">
		select * from (select * from novel order by dbms_random.value) where rownum <![CDATA[<=]]> #{a}
	</select>
	
	<resultMap id="getmemberDTO" type="com.mvc.withbooks.dto.MemberDTO">
		<id column="MNUM" property="mnum"/>
        <result column="MNUM" property="mnum"/>
	</resultMap>
	
	<resultMap id="getnovelDTO" type="com.mvc.withbooks.dto.NovelDTO">
		<id column="NNUM" property="nnum"/>
		<result column="NOVEL_SUBJECT" property="novel_subject"/>
		<result column="NNUM" property="nnum"/>
		<result column="NOVEL_MEMBERNAME" property="novel_memberName"/>
		<result column="NOVEL_IMAGE" property="novel_image"/>
		<result column="NOVEL_CATE" property="novel_cate"/>
		<result column="NOVEL_SUMMARY" property="novel_summary"/>
		<result column="NOVEL_RECOMMAND" property="novel_recommand"/>
        <association property="memberDTO" column="MNUM" resultMap="getmemberDTO" />
	</resultMap>
	
	<select id="findNovel" parameterType="java.util.Map" resultType="NovelDTO">
		select * from novel where ${search} = #{searchString}
	</select>
	
	<resultMap id="memberDTO" type="com.mvc.withbooks.dto.MemberDTO">
		<id column="MNUM" property="mnum"/>
        <result column="B.MNUM" property="mnum"/>
	</resultMap>
	
	<resultMap id="novelDTO" type="com.mvc.withbooks.dto.NovelDTO">
		<result column="NOVEL_MEMBERNAME" property="novel_memberName"/>
        <association property="memberDTO" column="MNUM" resultMap="memberDTO" />
	</resultMap>
	
	<select id="findNovelMain" parameterType="java.util.Map" resultType="NovelDTO">
		select * from (select rownum rn, A.* from (select * from novel where Novel_subject like '%'||#{searchString}||'%')A) where rn between #{start} and #{end}
	</select>
	
	<select id="findWriterMain" parameterType="java.util.Map" resultType="NovelDTO" resultMap="novelDTO">
		select * from (select rownum rn, A.* from (select DISTINCT Novel_membername,mnum from novel where Novel_membername like '%'||#{searchString}||'%')A) B INNER JOIN "MEMBER" m ON m.MNUM = B.MNUM where rn between #{start} and #{end}
	</select>
	
	<select id="getNovelCountMain" parameterType="java.util.Map" resultType="int">
		select count(*) from novel where Novel_subject like '%'||#{searchString}||'%'
	</select>
	
	<select id="getWriterCountMain" parameterType="java.util.Map" resultType="int">
		select count(*) from novel where Novel_memberName like '%'||#{searchString}||'%'
	</select>
	
	<select id="listForCate" parameterType="String" resultType="NovelDTO">
		select novel_cate, Nnum, novel_image, novel_subject, novel_memberName from novel n inner join category c on (n.novel_cate=c.cate_name) where novel_cate=#{selectCate}
	</select>
	
	<select id="NovelCount" resultType="int">
		select COUNT(*) FROM (select Nnum, Novel_subject, Novel_memberName, Novel_image, Novel_cate, Novel_summary from novel, member where novel.Mnum = member.Mnum and member.Mnum = #{mnum})
	</select>
	
	<select id="novelCountList" resultType="java.util.Map" parameterType="java.util.Map">
		select * from (select rownum rn, A.* from 
		((select Nnum, Novel_subject, Novel_memberName, Novel_image, Novel_cate, Novel_summary from novel, member where novel.Mnum = member.Mnum and member.Mnum = #{mnum} ))A) 
		where rn between #{startRow} and #{endRow}
	</select>
	
	<select id="listNovelCount" resultType="java.util.Map" parameterType="int">
		select Nnum, Novel_subject, Novel_memberName, Novel_image, Novel_cate, Novel_summary from novel, member where novel.Mnum = member.Mnum and member.Mnum = #{Mnum}
	</select>
	
	<select id="searchmemberNovel" resultType="NovelDTO">
		select Nnum, Novel_subject, Novel_memberName, Novel_image, Novel_cate, Novel_summary from novel where novel.Novel_memberName  = #{Novel_memberName}
	</select>
	
	<select id="checkNovelMemberName" parameterType="java.util.Map" resultType="NovelDTO">
		select Novel_memberName from novel where novel.Novel_memberName  = #{Novel_memberName} and MNUM!=#{Mnum}
	</select> 
</mapper>