<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mvc.withBooks.model.purchaseHistoryMapper"> 
	<select id="purchaseHistoryList" resultType="java.util.Map" parameterType="int">
		select e.EPI_SUBJECT, PurchaseHistory.PURCHASE_PRICE, PurchaseHistory.Purchase_date from EPISODE e , PurchaseHistory where PurchaseHistory.Mnum = #{memberDTO.getMnum}
	</select>
	
	<insert id="insertPurchase" parameterType="java.util.Map">
		insert into PurchaseHistory(Phnum, EPNUM, Purchase_date, Purchase_price, Mnum, Nnum) values(seq_purchaseHistory.nextval, #{epnum}, sysdate, #{Purchase_price}, #{mnum}, #{nnum})
	</insert>
	

	<select id="purchaseLibrary" resultType="Integer" parameterType="int">
		SELECT NNUM FROM PURCHASEHISTORY WHERE MNUM =#{mnum} GROUP BY NNUM
	</select>
	
	<select id="purchaseHistoryCheckList" parameterType="int" resultType="int">
		SELECT EPNUM FROM PURCHASEHISTORY WHERE MNUM =#{mnum}
	</select>
	
	<select id="getPurchaseHistoryCount" resultType="int">
		select COUNT(*) FROM (select e.EPI_SUBJECT, PurchaseHistory.PURCHASE_PRICE, PurchaseHistory.Purchase_date, PurchaseHistory.MNUM  from EPISODE e INNER join PurchaseHistory ON PurchaseHistory.EPNUM = e.epnum WHERE PurchaseHistory.MNUM =  #{memberDTO.getMnum} AND PurchaseHistory.PURCHASE_PRICE !=0)
	</select>
	
	<select id="purchaseList" resultType="java.util.Map" parameterType="java.util.Map">
		select * from (select rownum rn, A.* from 
		((select e.EPI_SUBJECT, PurchaseHistory.PURCHASE_PRICE, PurchaseHistory.Purchase_date, PurchaseHistory.MNUM  from EPISODE e INNER join PurchaseHistory ON PurchaseHistory.EPNUM = e.epnum WHERE PurchaseHistory.MNUM = #{mnum} AND PurchaseHistory.PURCHASE_PRICE !=0) )A)
		where rn between #{startRow} and #{endRow}
	</select>
	
	<select id="getEpisaleCount" resultType="int">
		select COUNT(*) FROM (select e.EPI_SUBJECT, PurchaseHistory.PURCHASE_PRICE, PurchaseHistory.Purchase_date, PurchaseHistory.MNUM  from EPISODE e INNER join PurchaseHistory ON PurchaseHistory.EPNUM = e.epnum WHERE PurchaseHistory.EPNUM  = #{EPNUM} AND PurchaseHistory.PURCHASE_PRICE !=0)
	</select>
	
	<select id="getNovelsaleCount" resultType="int">
		select COUNT(*) FROM (select e.EPI_SUBJECT, PurchaseHistory.PURCHASE_PRICE, PurchaseHistory.Purchase_date, PurchaseHistory.MNUM  from EPISODE e INNER join PurchaseHistory ON PurchaseHistory.EPNUM = e.epnum WHERE PurchaseHistory.NNUM  = #{NNUM}AND PurchaseHistory.PURCHASE_PRICE !=0)
	</select>
	
	<select id="chart" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT * FROM  (SELECT e.epnum,COUNT(e.epnum)-1 AS COUNT,n.mnum,e.EPI_SUBJECT,n.NNUM  FROM PURCHASEHISTORY p INNER JOIN EPISODE e  ON p.EPNUM =e.EPNUM INNER JOIN NOVEL n ON e.NNUM =n.NNUM GROUP BY e.EPNUM,n.mnum,e.EPI_SUBJECT,n.NNUM) WHERE mnum=#{mnum} AND nnum=#{nnum} ORDER BY EPNUM
	</select>
	
	<select id="writerChart" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT * from (SELECT p.PURCHASE_DATE, COUNT(*) AS count, p.NNUM, n.MNUM  FROM PURCHASEHISTORY p INNER JOIN NOVEL n ON p.NNUM = n.NNUM GROUP BY p.PURCHASE_DATE, p.NNUM, n.MNUM) WHERE mnum=#{mnum} AND nnum= #{nnum} ORDER BY PURCHASE_DATE
	</select>
	
	<select id="memberChart" parameterType="int" resultType="java.util.Map" >
		SELECT p.PURCHASE_DATE ,COUNT(p.PURCHASE_DATE) AS count,p.PURCHASE_PRICE  FROM PURCHASEHISTORY p INNER JOIN NOVEL n ON p.NNUM = n.NNUM WHERE n.MNUM = #{mnum} AND p.PURCHASE_PRICE !=0 GROUP BY p.PURCHASE_DATE,PURCHASE_PRICE 
	</select>
</mapper>